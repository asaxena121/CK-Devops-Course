# ConfigMap for service discovery demonstration
apiVersion: v1
kind: ConfigMap
metadata:
  name: service-config
  namespace: k8s-services-demo
data:
  services.yaml: |
    services:
      frontend:
        nodeport: "frontend-nodeport:3000"
        loadbalancer: "frontend-loadbalancer:80"
      backend:
        clusterip: "backend-service:5000"
      database:
        headless: "database-headless:5432"
        clusterip: "database-service:5432"
      external:
        api: "external-api-service:443"
  
  service-types.md: |
    # Kubernetes Service Types
    
    ## 1. ClusterIP (Default)
    - **Purpose**: Internal cluster communication
    - **Accessibility**: Only within cluster
    - **Use Case**: Microservice communication
    - **Example**: backend-service
    
    ## 2. NodePort
    - **Purpose**: External access via node IP
    - **Accessibility**: External via NodeIP:NodePort
    - **Port Range**: 30000-32767
    - **Example**: frontend-nodeport (port 30080)
    
    ## 3. LoadBalancer
    - **Purpose**: Production external access
    - **Accessibility**: External via cloud load balancer
    - **Requirement**: Cloud provider support
    - **Example**: frontend-loadbalancer
    
    ## 4. ExternalName
    - **Purpose**: Map to external DNS names
    - **Accessibility**: DNS CNAME mapping
    - **No Proxying**: Returns DNS record only
    - **Example**: external-api-service â†’ api.github.com
    
    ## 5. Headless Service
    - **Purpose**: Direct pod access
    - **Accessibility**: Returns pod IPs via DNS
    - **Use Case**: StatefulSets, peer discovery
    - **Example**: database-headless (clusterIP: None)

---
# Secret for demo purposes (if needed for external services)
apiVersion: v1
kind: Secret
metadata:
  name: service-demo-secret
  namespace: k8s-services-demo
type: Opaque
data:
  # Base64 encoded values
  api-key: ZGVtby1hcGkta2V5  # demo-api-key
  database-password: ZGVtby1wYXNzd29yZA==  # demo-password
