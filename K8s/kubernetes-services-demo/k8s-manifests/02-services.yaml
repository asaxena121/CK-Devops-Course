# 1. ClusterIP Service (Default) - Backend Service
# Only accessible within the cluster
apiVersion: v1
kind: Service
metadata:
  name: backend-service
  namespace: k8s-services-demo
  labels:
    app: backend
    service-type: clusterip
spec:
  type: ClusterIP  # Default type
  selector:
    app: backend
  ports:
  - port: 5000
    targetPort: 5000
    protocol: TCP
    name: http

---
# 2. NodePort Service - Frontend Service
# Accessible from outside the cluster via NodeIP:NodePort
apiVersion: v1
kind: Service
metadata:
  name: frontend-nodeport
  namespace: k8s-services-demo
  labels:
    app: frontend
    service-type: nodeport
spec:
  type: NodePort
  selector:
    app: frontend
  ports:
  - port: 3000
    targetPort: 3000
    nodePort: 30080  # Accessible via NodeIP:30080
    protocol: TCP
    name: http

---
# 3. LoadBalancer Service - Frontend Service (Production)
# Cloud provider will provision external load balancer
apiVersion: v1
kind: Service
metadata:
  name: frontend-loadbalancer
  namespace: k8s-services-demo
  labels:
    app: frontend
    service-type: loadbalancer
spec:
  type: LoadBalancer
  selector:
    app: frontend
  ports:
  - port: 80
    targetPort: 3000
    protocol: TCP
    name: http
  # Optional: specify loadBalancerIP if you have a reserved IP
  # loadBalancerIP: 1.2.3.4

---
# 4. ExternalName Service - External API Service
# Maps to external services via DNS
apiVersion: v1
kind: Service
metadata:
  name: external-api-service
  namespace: k8s-services-demo
  labels:
    service-type: externalname
spec:
  type: ExternalName
  externalName: api.github.com  # Example external service
  ports:
  - port: 443
    targetPort: 443
    protocol: TCP
    name: https

---
# 5. Headless Service - Database Service
# No cluster IP, returns pod IPs directly
apiVersion: v1
kind: Service
metadata:
  name: database-headless
  namespace: k8s-services-demo
  labels:
    app: database
    service-type: headless
spec:
  type: ClusterIP
  clusterIP: None  # This makes it headless
  selector:
    app: database
  ports:
  - port: 5432
    targetPort: 5432
    protocol: TCP
    name: database

---
# 6. Regular ClusterIP for Database (for comparison)
apiVersion: v1
kind: Service
metadata:
  name: database-service
  namespace: k8s-services-demo
  labels:
    app: database
    service-type: clusterip
spec:
  type: ClusterIP
  selector:
    app: database
  ports:
  - port: 5432
    targetPort: 5432
    protocol: TCP
    name: database
